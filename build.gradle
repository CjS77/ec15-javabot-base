apply plugin: 'java'
//apply plugin: 'maven'

group = 'za.co.nimbus.challenge'
version = '0.1'
description = "base bot"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
     maven { url "http://repo.maven.apache.org/maven2" }
}


dependencies {
    compile 'com.google.code.gson:gson:2.2.4'
    compile group: 'com.jayway.jsonpath', name: 'json-path', version:'2.0.0'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version:'1.7.10'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.2.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version:'2.2.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.2.3'
    testCompile group: 'junit', name: 'junit', version:'3.8.1'
    testCompile group: 'com.jayway.jsonpath', name: 'json-path-assert', version:'2.0.0'
}

jar {
    project.ext.target = project.hasProperty('target')? project.target : project.name
    baseName = project.ext.target
    manifest {
        attributes 'Main-Class': 'za.co.entelect.challenge.program.Main'
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task processTemplate(type: Copy) {
    project.ext.target = project.hasProperty('target')? project.target : project.name
    println("Processing ${project.ext.target} templates...")
    from 'src/templates'
    into 'src/main/java/za/co/entelect/challenge/program'
    //include 'mainT.java'
    rename("MainT.java", "Main.java")
    expand(project: project)
}



task("createRun", dependsOn: ['processTemplate','assemble']) {
    println("Building ${project.ext.target}...")
    def runfile = new File("run.sh");
    def cmd = "java -jar build/libs/${project.ext.target}-${project.version}.jar \$1\n"
    runfile.write("#!/bin/bash\n" + cmd)
    def winfile = new File("run.bat")
    winfile.write(cmd)
}
